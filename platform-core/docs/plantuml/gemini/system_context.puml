@startuml
' Embedded C4-PlantUML definitions for offline/restricted environments
!define C4_Context(alias, label, techn, desc) SYSTEM_BOUNDARY(alias, label)
!define C4_Container(alias, label, techn, desc) rectangle alias as label techn { desc }
!define C4_Component(alias, label, techn, desc) rectangle alias as label techn { desc }
!define C4_Context_Boundary(alias, label) rectangle alias as label {
!define C4_Container_Boundary(alias, label) rectangle alias as label {
!define C4_Component_Boundary(alias, label) rectangle alias as label {
!define Person(alias, label, desc) actor alias as label desc
!define System(alias, label, desc) rectangle alias as label <<System>> desc
!define System_Ext(alias, label, desc) rectangle alias as label <<External System>> desc
!define System_Boundary(alias, label) rectangle alias as label {
!define Boundary_End }

title System Context Diagram for Enterprise Data Platform

Person(external_sources, "External Data Sources/Users", "Generates and sends financial transactions and insurance claims.")
Person(data_consumers, "Data Analysts, Scientists & Business Users", "Consumes curated data for analytics, reporting, and ML; monitors platform health.")
Person(devops, "Operations & DevOps Team", "Manages, monitors, and operates the platform infrastructure and services.")

System(data_platform, "Enterprise Data Platform", "A robust, scalable, and observable platform for real-time and batch data ingestion, processing, and governance.")

Rel(external_sources, data_platform, "Sends raw financial and insurance data (HTTP/API)")
Rel(data_platform, data_consumers, "Provides curated data (Delta Lake, MongoDB) and operational insights (Grafana, OpenMetadata)")
Rel(devops, data_platform, "Deploys, Configures, Monitors, Troubleshoots (Docker Compose, UIs, Logs)")

@enduml
